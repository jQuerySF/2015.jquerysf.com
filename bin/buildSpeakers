#!/usr/bin/env node
'use strict';

// core modules
var fs = require('fs');

// npm modules
var async = require('async');
var jade = require('jade');
var path = require('path');
var mkdirp = require('mkdirp');
var moment = require('moment');

// internal modules
var speakers = require('../app/data/speakers.json');

// create paths
var basePath = path.resolve(__dirname, '..', 'build', 'speaker');
var generated = path.resolve(__dirname, '..', 'public', 'generated');

// read layout from disk
var speakerLayout = path.resolve(__dirname, '..', 'app', 'pages', 'speaker', 'speaker.jade')

function buildSpeakerPage(speaker, done) {
  var outPath = path.join(basePath, speaker.id + '.html');
  
  var template = jade.compileFile(speakerLayout, {
    //jade options
    filename: speakerLayout
  });
  
  fs.writeFile(outPath, template(speaker), done);
}

function buildSpeakerPages(done) {
  async.each(speakers.speakers, buildSpeakerPage, done);
}

// pipeline
async.series([
  mkdirp.bind(null, basePath),
  buildSpeakerPages
], function (err) {

  if (err) {
    console.error(new Error(err));
  }

  console.log('Done building pages for all speaker');
});
